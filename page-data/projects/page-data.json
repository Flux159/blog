{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/projects",
    "result": {"data":{"site":{"siteMetadata":{"title":"Suyogs website","docsLocation":"https://github.com/flux159/blog"}},"mdx":{"fields":{"id":"cc9f539c-0b33-526b-af9e-44b0f9827fe0","title":"Projects","slug":"/projects"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Projects\",\n  \"metaTitle\": \"Suyogs Projects\",\n  \"metaDescription\": \"Projects that I have worked on\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Tigerbot\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Flux159/Tigerbot/wiki\"\n  }, \"Tigerbot\"), \" was a project in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cmu.edu/\"\n  }, \"college\"), \" for CMU's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.build18.org/\"\n  }, \"Build18\"), \" event. It was a 2 wheeled robot made in 2011 that could be controlled via an iPhone. One PCB was custom developed, the low level microcontroller code was coded by Kevin Li, and the iPhone connected to the bot via a Beagleboard with USB Wifi.\"), mdx(\"h1\", null, \"Newsatlas.io\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://newsatlas.io/\"\n  }, \"Newsatlas\"), \" was a single page app that I used to learn AngularJS with - it is now defunct because Google removed the APIs that I was using to retrieve news data. The logic to map between a news article and the location was done client side based on how many times the articles description text contained a location. A filtered list of every city, country, and state was sent over to the client as a large dictionary to remove the need for a webserver.\"), mdx(\"h1\", null, \"Treehouse Clash\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.chronotale.com/treehouse-clash.html\"\n  }, \"Treehouse Clash\"), \" was a simple 3d game I wrote in Objective-C. It was used to learn about OpenGL, iPhone game development, and computer graphics. I wrote the entire 3d Game Engine from scrach in Objective-C and learned Blender along the way for creating 3d models.\"), mdx(\"h1\", null, \"Slicer.io\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.reddit.com/r/slicer/\"\n  }, \"Slicer\"), \" was a reddit-like website where users could create spaces and post content (links, images, audio, videos). I wrote a React-like web framework with a browser + node router that could do serverside rendering for this website.\"), mdx(\"h1\", null, \"ScriptFlow\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://scriptflow.io/\"\n  }, \"Scriptflow\"), \" is a dataflow tool written in Node.js and React. I designed and wrote the graphical DAG engine, designed the website, wrote the docs, and deployed to AWS. \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#tigerbot","title":"Tigerbot"},{"url":"#newsatlasio","title":"Newsatlas.io"},{"url":"#treehouse-clash","title":"Treehouse Clash"},{"url":"#slicerio","title":"Slicer.io"},{"url":"#scriptflow","title":"ScriptFlow"}]},"parent":{"relativePath":"projects.md"},"frontmatter":{"metaTitle":"Suyogs Projects","metaDescription":"Projects that I have worked on","path":null,"date":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/experiments","title":"Experiments and Thoughts"}}},{"node":{"fields":{"slug":"/images","title":"Images"}}},{"node":{"fields":{"slug":"/","title":"Suyogs Website"}}},{"node":{"fields":{"slug":"/projects","title":"Projects"}}},{"node":{"fields":{"slug":"/work","title":"Work"}}},{"node":{"fields":{"slug":"/experiments/000001-qemu-and-tinycore","title":"QEMU and Tinycore Linux"}}},{"node":{"fields":{"slug":"/experiments/000002-zero-to-web-browser","title":"Zero to Web Browser"}}},{"node":{"fields":{"slug":"/experiments/000003-github-pages-for-static-sites","title":"Github Pages for Static Sites"}}},{"node":{"fields":{"slug":"/experiments/000004-titanic-dataset","title":"Titanic Dataset"}}},{"node":{"fields":{"slug":"/experiments/000005-vscode-online","title":"VSCode Online with AWS"}}},{"node":{"fields":{"slug":"/experiments/000006-windows-gaming-pc-on-aws","title":"Create your own Windows Gaming PC on AWS"}}},{"node":{"fields":{"slug":"/experiments/000007-nextjs-with-postgraphile","title":"Next.js with Postgraphile"}}},{"node":{"fields":{"slug":"/images/000001-central-park","title":"Central Park"}}}]}},"pageContext":{"id":"cc9f539c-0b33-526b-af9e-44b0f9827fe0"}},
    "staticQueryHashes": ["1255495854","2619113677","417421954"]}