{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/experiments/000001-qemu-and-tinycore",
    "result": {"data":{"site":{"siteMetadata":{"title":"Suyogs website","docsLocation":"https://github.com/flux159/blog"}},"mdx":{"fields":{"id":"da18f5b8-ab9b-5bb9-ae3d-9bf251aac960","title":"QEMU and Tinycore Linux","slug":"/experiments/000001-qemu-and-tinycore"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"QEMU and Tinycore Linux\",\n  \"path\": \"/experiments/qemu-and-tinycore\",\n  \"date\": \"11-28-2019\",\n  \"metaTitle\": \"QEMU and Tinycore Linux 10.1\",\n  \"metaDescription\": \"Experimenting with Tinycore Linux and QEMU\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Experiment working with QEMU and Tinycore linux on a Mac.\"), mdx(\"h1\", null, \"Setup\"), mdx(\"p\", null, \"On a Mac, get \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.qemu.org/\"\n  }, \"QEMU\"), \" by using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://brew.sh/\"\n  }, \"Homebrew\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"brew install qemu\\n\")), mdx(\"p\", null, \"Download Core-current.iso and TinyCore-current.iso from Tinycore's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://tinycorelinux.net/downloads.html\"\n  }, \"website\"), \". For the experiment below, they are located in my Downloads folder \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/Downloads/\"), \".\"), mdx(\"h1\", null, \"Experiment\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"mkdir qemutests\\ncd qemutests \\nqemu-img create tinycore.img 512M\\nqemu-system-x86_64 -hda tinycore.img -m 512 -cdrom ~/Downloads/Core-current.iso -boot d -net nic -net user,hostfwd=tcp:127.0.0.1:8008-:80\\n\")), mdx(\"p\", null, \"Note that you \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"must\"), \" have that second -net command to download things properly.\"), mdx(\"p\", null, \"Qemu will open up a window and booting from the iso should only take 10 seconds.\"), mdx(\"p\", null, \"If you logout, there\\u2019s a user with the name \\u201Ctc\\u201D that you can login as again.\"), mdx(\"p\", null, \"If you sudo reboot right now before following the \\\"install\\\" instructions below, you will lose all data in the VM since the entire OS is running in memory and is not persisted to the qemu-img disk you created earlier.\"), mdx(\"h2\", null, \"Extensions\"), mdx(\"p\", null, \"To download extensions (like packages in Ubuntu or CentOS), you can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://wiki.tinycorelinux.net/wiki:tce-load\"\n  }, \"tce-load\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"tce-load -iw vim\\ntce-load -iw python3.6-dev\\n\")), mdx(\"p\", null, \"Note that I was having multiple issues around md5sum mismatches when installing extensions using tce-load. This happened for both the shell based Core and GUI based TinyCore.\"), mdx(\"p\", null, \"You can partially get around the md5 check by using tce-fetch, but this is not recommended for most non-experimental purposes.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"tce-fetch.sh gvim.gcz\\ntce-load -i gvim.gcz\\n\")), mdx(\"p\", null, \"In my few hours of experimenting, I wasn't able to find out a good fix for the md5sum issues. Feel free to leave an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Flux159/blog/issues\"\n  }, \"issue\"), \" on my blog's github if you're able to find a fix.\"), mdx(\"h2\", null, \"Installing to Disk\"), mdx(\"p\", null, \"This is mainly following TinyCore's \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://tinycorelinux.net/install_manual.html\"\n  }, \"install manual\"), \" for making a bootable hard drive w/ tiny core rather than just the iso booting in QEMU.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"tce-load -wi cfdisk\\ntce-load -wi grub-0.97-splash\\nsudo su\\nfdisk -l (should show /dev/sda - which will be used for following commands)\\ncfdisk /dev/sda\\n\\n# The following is in the cfdisk terminal interface\\n[New] [Primary] [Enter for default] [Beginning] [Bootable - select this]\\n[Write]\\nyes\\n[Quit]\\n\\nmkfs.ext3 /dev/sda1\\nrebuildfstab\\n\\nmount /mnt/sda1\\nmkdir -p /mnt/sda1/boot/grub\\n\\n# Mount the original boot media (the disk) - it was at /dev/sr0 (just did cat /etc/fstab to check):\\nmount /mnt/sr0\\ncp -p /mnt/sr0/boot/* /mnt/sda1/boot/\\nmkdir -p /mnt/sda1/tce\\ntouch /mnt/sda1/tce/mydata.tgz\\n\\ncp -p /usr/lib/grub/i386-pc/* /mnt/hda1/boot/grub/\\nvi /mnt/hda1/boot/grub/menu.lst\\n\\n# Type \\u201Ci\\u201D, insert the following (note that the install_manual is out of date - follow this: http://forum.tinycorelinux.net/index.php?topic=15713.0):\\n\\ndefault 0\\ntimeout 10\\ntitle tinycore\\nkernel /boot/vmlinuz quiet\\ninitrd /boot/core.gz\\n\\n# Use Esc + :wq to save the file and quit\\n\\ngrub\\nroot (hd0,0)\\nsetup (hd0)\\nquit\\n\\numount /mnt/hdc\\neject /dev/hdc\\n\\nreboot\\n\")), mdx(\"p\", null, \"Note that cfdisk, etc. have been deleted because they were installed on the temporary iso, but now that you\\u2019ve installed to disk, the next time you run qemu, you can just boot from disk:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"qemu-system-x86_64 -hda tinycore.img -m 512 -boot d -net nic -net user,hostfwd=tcp:127.0.0.1:8009-:80 \\n\")), mdx(\"h1\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://tinycorelinux.net/faq.html\"\n  }, \"http://tinycorelinux.net/faq.html\"), \" - Tinycore's FAQ\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://tinycorelinux.net/install_manual.html\"\n  }, \"http://tinycorelinux.net/install_manual.html\"), \" - Tinycore's Install Manual\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://forum.tinycorelinux.net/index.php?topic=15713.0\"\n  }, \"http://forum.tinycorelinux.net/index.php?topic=15713.0\"), \" - Forum post about changes to grub configuration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jon.sprig.gs/blog/post/53\"\n  }, \"https://jon.sprig.gs/blog/post/53\"), \" - useful to start experimenting with Qemu arguments\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#setup","title":"Setup"},{"url":"#experiment","title":"Experiment","items":[{"url":"#extensions","title":"Extensions"},{"url":"#installing-to-disk","title":"Installing to Disk"}]},{"url":"#references","title":"References"}]},"parent":{"relativePath":"experiments/000001-qemu-and-tinycore.md"},"frontmatter":{"metaTitle":"QEMU and Tinycore Linux 10.1","metaDescription":"Experimenting with Tinycore Linux and QEMU","path":"/experiments/qemu-and-tinycore","date":"11-28-2019"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/experiments","title":"Experiments and Thoughts"}}},{"node":{"fields":{"slug":"/images","title":"Images"}}},{"node":{"fields":{"slug":"/","title":"Suyogs Website"}}},{"node":{"fields":{"slug":"/projects","title":"Projects"}}},{"node":{"fields":{"slug":"/work","title":"Work"}}},{"node":{"fields":{"slug":"/experiments/000001-qemu-and-tinycore","title":"QEMU and Tinycore Linux"}}},{"node":{"fields":{"slug":"/experiments/000002-zero-to-web-browser","title":"Zero to Web Browser"}}},{"node":{"fields":{"slug":"/experiments/000003-github-pages-for-static-sites","title":"Github Pages for Static Sites"}}},{"node":{"fields":{"slug":"/experiments/000004-titanic-dataset","title":"Titanic Dataset"}}},{"node":{"fields":{"slug":"/experiments/000005-vscode-online","title":"VSCode Online with AWS"}}},{"node":{"fields":{"slug":"/experiments/000006-windows-gaming-pc-on-aws","title":"Create your own Windows Gaming PC on AWS"}}},{"node":{"fields":{"slug":"/experiments/000007-nextjs-with-postgraphile","title":"Next.js with Postgraphile"}}},{"node":{"fields":{"slug":"/images/000001-central-park","title":"Central Park"}}}]}},"pageContext":{"id":"da18f5b8-ab9b-5bb9-ae3d-9bf251aac960"}},
    "staticQueryHashes": ["1255495854","2619113677","417421954"]}