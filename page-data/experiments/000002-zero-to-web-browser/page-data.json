{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/experiments/000002-zero-to-web-browser",
    "result": {"data":{"site":{"siteMetadata":{"title":"Suyogs website","docsLocation":"https://github.com/flux159/blog"}},"mdx":{"fields":{"id":"2169c4a1-00b1-5c39-9b46-f4458eb43f82","title":"Zero to Web Browser","slug":"/experiments/000002-zero-to-web-browser"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Zero to Web Browser\",\n  \"path\": \"/experiments/zero-to-web-browser\",\n  \"date\": \"11-28-2019\",\n  \"metaTitle\": \"Zero to Web Browser\",\n  \"metaDescription\": \"Thoughts on Zero to Web Browser\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Intro\"), mdx(\"p\", null, \"This is mainly a thought project I've had for a while now taking inspiration from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.nand2tetris.org/\"\n  }, \"Nand2Tetris\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.osdev.org/Expanded_Main_Page\"\n  }, \"OS Development\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pomb.us/build-your-own-react/\"\n  }, \"Build your own react\"), \" and various projects working on making an Operating Sytem from scratch.\"), mdx(\"p\", null, \"I want to take the next step from writing an OS (bootloader, kernel, processes & memory management, drivers) to writing a full fledged Web Browser. This would involve a lot of additional work (including writing a windowing engine, html/css parser, JS engine), but it should be feasible to have a working system that can connect to the Web. Ideally this would be taught as a course in college to inform students of the wide variety of different topics in Computer Science and Computer Engineering.\"), mdx(\"h1\", null, \"Steps\"), mdx(\"p\", null, \"(Modern) Computers from the ground up to a Web Browser to Machine Learning (along the way need to mention Math, Physics/Mechanics/Chemistry, optimization / businesses that allow people in the next layer to focus on making that better):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Physics + Electrical circuits (voltage, amps, op amps / transistor circuits, nand gates / boolean logic)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hardware circuits - ALU, memory, CPU, assembly instructions for arbitrary computation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating system / Kernel & User space / Process & memory management / Drivers / (Persistent Disk) / Networking (possibly w/ Telephony/Wireless) - C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Terminal / Shell, font rendering, windowing system, shell utilities built in\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating System(s) revisited (apps / spreadsheets (data flow) / docs / presentations - \\u201COffice\\u201D), Photoshop, Aside: Intro to databases (Filemaker, Access, SQLite, MySQL, Postgres, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Windowing system + HTTP / HTML / CSS + Javascript, Images / image utilities, videos & video compression\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Games and Graphics - v1 (could have been before windowing system, but more relevant here - still talk about nethack, ascii games, etc.) - for terminal a \\u201Clarge\\u201D project could be getting Tetris (custom code) / Nethack (compile existing code) working in environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search google, view images on FB, browse the web, post data into forms, etc. (communicate)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CCreate\\u201D on the web - google docs, web based editors, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a search engine using the networking tools, parse data into structured formats, use databases, indices (writing a search engine) - beginning of \\u201Cdata science\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modern apps (desktop, mobile, web); services (Netflix, Youtube, Facebook); ad based revenue models, privacy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Machine learning - the tools & how to think about it from a high level perspective - simple algorithms to neural networks and systematization of data science tools to support ML\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optimizations in specific fields helping in other fields\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"iOS, Android, KaiOS, mobile computing and the future of computation (trucks vs cars analogy kinda works but only goes so far)\")), mdx(\"h1\", null, \"Aside\"), mdx(\"p\", null, \"This is mainly just a thought experiment at the moment, but if I have sufficient time, I'd want to work/collaborate on a project like this.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#intro","title":"Intro"},{"url":"#steps","title":"Steps"},{"url":"#aside","title":"Aside"}]},"parent":{"relativePath":"experiments/000002-zero-to-web-browser.md"},"frontmatter":{"metaTitle":"Zero to Web Browser","metaDescription":"Thoughts on Zero to Web Browser","path":"/experiments/zero-to-web-browser","date":"11-28-2019"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/experiments","title":"Experiments and Thoughts"}}},{"node":{"fields":{"slug":"/images","title":"Images"}}},{"node":{"fields":{"slug":"/","title":"Suyogs Website"}}},{"node":{"fields":{"slug":"/projects","title":"Projects"}}},{"node":{"fields":{"slug":"/work","title":"Work"}}},{"node":{"fields":{"slug":"/experiments/000001-qemu-and-tinycore","title":"QEMU and Tinycore Linux"}}},{"node":{"fields":{"slug":"/experiments/000002-zero-to-web-browser","title":"Zero to Web Browser"}}},{"node":{"fields":{"slug":"/experiments/000003-github-pages-for-static-sites","title":"Github Pages for Static Sites"}}},{"node":{"fields":{"slug":"/experiments/000004-titanic-dataset","title":"Titanic Dataset"}}},{"node":{"fields":{"slug":"/experiments/000005-vscode-online","title":"VSCode Online with AWS"}}},{"node":{"fields":{"slug":"/experiments/000006-windows-gaming-pc-on-aws","title":"Create your own Windows Gaming PC on AWS"}}},{"node":{"fields":{"slug":"/experiments/000007-nextjs-with-postgraphile","title":"Next.js with Postgraphile"}}},{"node":{"fields":{"slug":"/images/000001-central-park","title":"Central Park"}}}]}},"pageContext":{"id":"2169c4a1-00b1-5c39-9b46-f4458eb43f82"}},
    "staticQueryHashes": ["1255495854","2619113677","417421954"]}