{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/experiments/000004-titanic-dataset",
    "result": {"data":{"site":{"siteMetadata":{"title":"Suyogs website","docsLocation":"https://github.com/flux159/blog"}},"mdx":{"fields":{"id":"67473089-caca-5cfb-a22b-bcaf1bac0b36","title":"Titanic Dataset","slug":"/experiments/000004-titanic-dataset"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Titanic Dataset\",\n  \"path\": \"/experiments/titanic-dataset\",\n  \"date\": \"11-28-2019\",\n  \"metaTitle\": \"Titanic Dataset\",\n  \"metaDescription\": \"Playing with the titanic dataset in Pandas\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Working with the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/problem12.html\"\n  }, \"Titanic Dataset\"), \" in Jupyter.\"), mdx(\"iframe\", {\n    src: \"/htmlresources/titanicdataset.html\",\n    title: \"dummy\",\n    frameBorder: \"0\",\n    width: \"800px\",\n    height: \"600px\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"relativePath":"experiments/000004-titanic-dataset.md"},"frontmatter":{"metaTitle":"Titanic Dataset","metaDescription":"Playing with the titanic dataset in Pandas","path":"/experiments/titanic-dataset","date":"11-28-2019"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/experiments","title":"Experiments and Thoughts"}}},{"node":{"fields":{"slug":"/images","title":"Images"}}},{"node":{"fields":{"slug":"/","title":"Suyogs Website"}}},{"node":{"fields":{"slug":"/projects","title":"Projects"}}},{"node":{"fields":{"slug":"/work","title":"Work"}}},{"node":{"fields":{"slug":"/experiments/000001-qemu-and-tinycore","title":"QEMU and Tinycore Linux"}}},{"node":{"fields":{"slug":"/experiments/000002-zero-to-web-browser","title":"Zero to Web Browser"}}},{"node":{"fields":{"slug":"/experiments/000003-github-pages-for-static-sites","title":"Github Pages for Static Sites"}}},{"node":{"fields":{"slug":"/experiments/000004-titanic-dataset","title":"Titanic Dataset"}}},{"node":{"fields":{"slug":"/experiments/000005-vscode-online","title":"VSCode Online with AWS"}}},{"node":{"fields":{"slug":"/experiments/000006-windows-gaming-pc-on-aws","title":"Create your own Windows Gaming PC on AWS"}}},{"node":{"fields":{"slug":"/experiments/000007-nextjs-with-postgraphile","title":"Next.js with Postgraphile"}}},{"node":{"fields":{"slug":"/images/000001-central-park","title":"Central Park"}}}]}},"pageContext":{"id":"67473089-caca-5cfb-a22b-bcaf1bac0b36"}},
    "staticQueryHashes": ["1255495854","2619113677","417421954"]}